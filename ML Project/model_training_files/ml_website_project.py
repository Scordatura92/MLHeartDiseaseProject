# -*- coding: utf-8 -*-
"""ML Website Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19XakTO9pnAacxU3FO2ZG768S1CUPfPlw

#####Importing Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report
from sklearn import preprocessing

"""#####Importing Data"""

# Data From https://www.kaggle.com/datasets/redwankarimsony/heart-disease-data/data
df = pd.read_csv('/heart_disease_uci.csv')
df.head()

"""Data Notes:
- cp = chest pain type
- trestbps = resting blood pressure
- chol = cholesterol measures
- fbs = fasting blood sugar
- restecg = ecg observation at resting condition
- thalch = max heart rate achieved
- exang = excercise induced angina
- oldpeak = st depression induced by exercise relative to rest
- slope = the slope of the peak exercise ST segment
- ca = number of major vessels (0-3) colored by flourosopy
- thal = thal
- num = target
"""

df.info()

# Drop kolom ID, lokasi dataset, fbs
df = df.drop(columns='id', axis=1)
df = df.drop(columns='dataset', axis=1)
df

# Menunjukkan data null
df.isnull().sum()

# Menghapus data null
df.dropna(inplace=True)

df.isnull().sum()

df.info()

# Rename kolom num sebagai target
df.rename(columns = {'num':'target'}, inplace = True)
df

"""#####Data Exploration/Visualisation"""

plt.hist(df['cp'])

plt.hist(df['sex'])

plt.hist(df['restecg'])

plt.hist(df['slope'])

plt.hist(df['thal'])

"""#####Feature Selection and Engineering"""

df['exang'] = df['exang'].replace({True: 1, False: 0})
df['fbs'] = df['fbs'].replace({True: 1, False: 0})

df['target'] = df['target'].replace({1: 1, 2: 1, 3:1, 4:1})
plt.hist(df['target'])

# One-hot encoding
pd = pd.get_dummies(df, drop_first=False, dtype=int)
pd.head()

pd.drop('restecg_normal', axis=1, inplace=True)
pd.drop('thal_normal', axis=1, inplace=True)
pd.drop('cp_asymptomatic', axis=1, inplace=True)
pd

"""##### Splitting Data"""

X = pd.drop('target', axis=1)
X

y = pd['target']
y

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

"""#####Model Training"""

model = RandomForestClassifier(max_depth=5)
# model = DecisionTreeClassifier(random_state=0)
model.fit(X_train, y_train)

"""#####Model Evaluation"""

train_data_pred = model.predict(X_train)
train_data_accuracy = accuracy_score(y_train, train_data_pred)
print("Train data accuracy: ",train_data_accuracy)

print(classification_report(y_train,train_data_pred))

test_data_pred = model.predict(X_test)
test_data_accuracy = accuracy_score(y_test, test_data_pred)
print("Test data accuracy: ",test_data_accuracy)

print(classification_report(y_test,test_data_pred))